version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.15
  aws-code-deploy: circleci/aws-code-deploy@1.0.1

jobs:
  build:
    working_directory: ~/webapp
    docker:
    - image: circleci/openjdk:8-jdk-stretch
    - image: 'cimg/python:3.6'
    steps:
    - checkout
    - restore_cache:
        key: webapp-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: webapp-{{ checksum "pom.xml" }}
    - run: mvn package
    - store_test_results:
        path: target/surefire-reports
    - store_artifacts:
        path: target/lambda-serverless.jar
  pr_check:
    working_directory: ~/webapps
    docker:
    - image: circleci/openjdk:8-jdk-stretch
    steps:
    - checkout
    - restore_cache:
        key: webapps-{{ checksum "pom.xml" }}
    - run: mvn dependency:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: webapps-{{ checksum "pom.xml" }}
    - run: mvn package
    - store_test_results:
        path: target/surefire-reports
    - store_artifacts:
        path: target/lambda-serverless.jar

    - run:
          name: Install aws cli and configure
          command: |
            sudo apt-get update && sudo apt-get install python-pip
            sudo pip install awscli
            sudo aws --version
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set region ${AWS_REGION}
            aws configure list
            pwd  
    - run:
          name: Create Artifact directory
          command: |
            echo "Making the lambda_artifact directory"
            mkdir -p lambda_artifact
            cd lambda_artifact
            pwd
            ls -al
            touch 777 lambda.txt    
    - run:
          name: Upload Artifact to S3
          command: |
            echo "Uploading Artifact to S3 bucket s3://codedeploy.sridharprasadpanneerselvam.me"
            aws s3 cp /home/circleci/webapps/target/lambda-serverless.jar s3://codedeploy.sridharprasadpanneerselvam.me --region us-east-1
            echo "Artifact uploaded to S3 successfully"
    - run:
          name: Update JAR in lambda function
          command: |
            allfunctions=$(aws lambda list-functions --query 'Functions[?Version == `$LATEST`].{FunctionName:FunctionName}')
            if [  `echo $allfunctions | grep -w -c "passwordlambda" ` -gt 0 ]
            then
              echo "Function passwordlambda already exists. Updating it."
              aws lambda update-function-code --region ${AWS_REGION} \
                                              --function-name passwordlambda \
                                              --s3-bucket codedeploy.sridharprasadpanneerselvam.me \
                                              --s3-key lambda-serverless.jar > lambda.txt
              echo "Function updated successfully."
            fi
workflows:
  version: 2
  pr-check:   
    jobs:
    - pr_check
  build_deploy:
    jobs:
    - build